continue
@user.__elasticsearch__.index_document
@user
continue
"%#{params[:search]}%"
User.where('name ILIKE ?', "%#{params[:search]}%")
('name ILIKE ?', "%#{params[:search]}%")
'name ILIKE ?', "%#{params[:search]}%"
a
a  = User.where('name ILIKE ?', "%#{params[:search]}%")
User.where('name ILIKE ?', "%#{params[:search]}%")
params[:search]
continue
@user
@user = User.all
User.all
continue
@user
@user.save!
continue
@user.save!
continue
@user.save!
@user.save
continue
@user.save
continue
@user.save
continue
@user.save
continue
@user.save!
@user.save
continue
@user.save!
continue
@user.save!
@user.save
continue
self.save!
self.save
self.phone_number = normalized_number
normalized_number
Rails.logger.info("Normalized Phone Number: #{normalized_number}")
normalized_number = PhonyRails.normalize_number(phone_number, default_country_code: 'US')
=> 11:     normalized_number = PhonyRails.normalize_number(phone_number, default_country_code: 'US')
phone_number
phone_number,
PhonyRails.normalize_number(phone_number, default_country_code: 'US')
PhonyRails
continue
@user.errors.full_messages
@user.save
continue
@user.errors.full_messages
continue
@user.errors.full_messages
@user.save!
continue
@user.save!
@user.save
@user
continue
if @user.save
@user
@user.save
continue
user
continue
user.errors
@user
user
continue
n
ActiveAdmin.routes(self)
ActiveAdmin.routes(self).
self
continue
@article.image
@article.image.attach(io: downloaded_image, filename: 'image.jpg')
URI.open(url)
require 'open-uri'
URI.open(url)
url
continue
column_names
self
self.ransackable_attributes
self.ransackable_attributes(auth_object = nil)
continue
self.ransackable_attributes(auth_object = nil)
self.ransackable_attributes
self
column_names
auth_object
continue
self
self.ransackable_attributes
continue
self.ransackable_attributes
self
auth_object
self.ransackable_attributes
continue
column :sign_in_count
column :current_sign_in_at
column :email
id_column
selectable_column
continue
render json: { status: :ok, products: @products }
@products = Product.all
continue
